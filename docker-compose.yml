version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: customers-orders-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: customers_orders
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./db/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  # Customers API
  customers-api:
    build:
      context: ./customers-api
      dockerfile: Dockerfile
    container_name: customers-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: app_user
      DB_PASSWORD: app_password
      DB_NAME: customers_orders
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
      SERVICE_TOKEN: ${SERVICE_TOKEN:-your-service-token-change-in-production}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Orders API
  orders-api:
    build:
      context: ./orders-api
      dockerfile: Dockerfile
    container_name: orders-api
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: app_user
      DB_PASSWORD: app_password
      DB_NAME: customers_orders
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
      SERVICE_TOKEN: ${SERVICE_TOKEN:-your-service-token-change-in-production}
      CUSTOMERS_API_BASE: http://customers-api:3001
    depends_on:
      mysql:
        condition: service_healthy
      customers-api:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
